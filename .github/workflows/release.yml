name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (without v prefix)'
        required: true
        type: string

permissions:
  contents: write  # Needed for creating releases and uploading artifacts

jobs:
  call-build-workflow:
    name: Build Release Artifacts
    uses: ./.github/workflows/build.yml
    with:
      configuration: 'Release'

  release:
    name: Create Release
    needs: call-build-workflow
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v4

      - name: Extract Version from Tag
        id: get-version
        run: |
          # Use provided version from workflow dispatch or extract from tag
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "::notice::Creating release for version $VERSION"

      - name: Download Windows x64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: RVToolsMerge-windows-Release
          path: artifacts/win-x64

      - name: Download Linux x64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: RVToolsMerge-linux-Release
          path: artifacts/linux-x64

      - name: Download Windows ARM64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: RVToolsMerge-windows-arm64-Release
          path: artifacts/win-arm64

      - name: Download macOS ARM64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: RVToolsMerge-macos-arm64-Release
          path: artifacts/osx-arm64

      - name: Create Archives
        run: |
          # Create artifacts directory if it doesn't exist
          mkdir -p artifacts
          cd artifacts

          # Function to create archives with error handling
          create_archive() {
            local platform=$1
            local version=$2
            local dir_name="$platform"
            local archive_name="RVToolsMerge-${version}-${platform}.zip"

            if [ -d "$dir_name" ] && [ "$(ls -A "$dir_name")" ]; then
              echo "Creating archive for $platform..."
              zip -j "$archive_name" "$dir_name"/*
              echo "âœ… Created $archive_name"
            else
              echo "::warning::Directory for $platform is empty or not found"
              # Create an empty file to satisfy the release step
              touch "empty_$archive_name"
            fi
          }

          # Create archives for each platform
          create_archive "win-x64" "${{ steps.get-version.outputs.version }}"
          create_archive "win-arm64" "${{ steps.get-version.outputs.version }}"
          create_archive "linux-x64" "${{ steps.get-version.outputs.version }}"
          create_archive "osx-arm64" "${{ steps.get-version.outputs.version }}"

          # List created archives
          echo "Created the following archives:"
          ls -la *.zip 2>/dev/null || echo "No archives were created"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: RVToolsMerge v${{ steps.get-version.outputs.version }}
          tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', github.event.inputs.version) || github.ref }}
          draft: false
          prerelease: false
          files: |
            artifacts/RVToolsMerge-${{ steps.get-version.outputs.version }}-win-x64.zip
            artifacts/RVToolsMerge-${{ steps.get-version.outputs.version }}-win-arm64.zip
            artifacts/RVToolsMerge-${{ steps.get-version.outputs.version }}-linux-x64.zip
            artifacts/RVToolsMerge-${{ steps.get-version.outputs.version }}-osx-arm64.zip
          body: |
            ## RVTools Excel Merge v${{ steps.get-version.outputs.version }}

            Please refer to the [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

            ### Installation

            Download the appropriate archive for your operating system and extract it to use the application.

            - **Windows (x64)**: RVToolsMerge-${{ steps.get-version.outputs.version }}-win-x64.zip
            - **Windows (ARM64)**: RVToolsMerge-${{ steps.get-version.outputs.version }}-win-arm64.zip
            - **Linux (x64)**: RVToolsMerge-${{ steps.get-version.outputs.version }}-linux-x64.zip
            - **macOS (ARM64)**: RVToolsMerge-${{ steps.get-version.outputs.version }}-osx-arm64.zip
