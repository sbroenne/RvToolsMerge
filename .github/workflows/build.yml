name: Build Workflow

on:
  workflow_call:
    inputs:
      configuration:
        required: false
        type: string
        default: "Debug"
        description: "Build configuration (Debug/Release)"
      ref:
        required: false
        type: string
        default: ""
        description: "Git reference (tag, branch, or commit) to build from"

permissions:
  contents: read
  checks: write
  actions: read
  pull-requests: read

env:
  DOTNET_VERSION: "9.0.x"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
  DOTNET_NOLOGO: "true"
  DOTNET_CLI_TELEMETRY_OPTOUT: "true"

jobs:
  # Build job that runs tests and coverage using matrix strategy for all platforms
  build-all-platforms:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            runtime: win-x64
            cache-suffix: ""
            run-tests: true
          - os: ubuntu-latest
            runtime: linux-x64
            cache-suffix: ""
            run-tests: true
          - os: macos-latest
            runtime: osx-arm64
            cache-suffix: ""
            run-tests: true
          # Cross-compilation builds (no native tests)
          - os: windows-latest
            runtime: win-arm64
            cache-suffix: "-arm64"
            run-tests: false
          - os: ubuntu-latest
            runtime: linux-arm64
            cache-suffix: "-arm64"
            run-tests: false
          - os: macos-13  # Intel Mac runner
            runtime: osx-x64
            cache-suffix: "-x64"
            run-tests: true

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}${{ matrix.cache-suffix }}-nuget-${{ hashFiles('**/*.csproj', '**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}${{ matrix.cache-suffix }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration ${{ inputs.configuration }} --no-restore

      - name: Test
        if: matrix.run-tests
        run: dotnet test --configuration ${{ inputs.configuration }} --no-build --verbosity normal --logger "trx;LogFileName=${{ matrix.runtime }}-test-results.trx" --results-directory TestResults
        env:
          DOTNET_RUNTIME: ${{ matrix.runtime }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always() && matrix.run-tests
        with:
          name: test-results-${{ matrix.runtime }}
          path: TestResults/*.trx
          retention-days: 7

      - name: Publish
        run: dotnet publish src/RVToolsMerge/RVToolsMerge.csproj --configuration ${{ inputs.configuration }} --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true --no-restore --output publish

      - name: Make executable on Unix
        if: runner.os != 'Windows'
        run: chmod +x publish/RVToolsMerge

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: RVToolsMerge-${{ matrix.runtime }}
          path: publish/
          retention-days: 30
