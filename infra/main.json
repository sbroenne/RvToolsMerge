{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "7001284406092921860"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "prod",
      "minLength": 3,
      "maxLength": 10,
      "metadata": {
        "description": "The name of the environment for resource naming"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "VM administrator username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "VM administrator password"
      }
    },
    "githubToken": {
      "type": "securestring",
      "metadata": {
        "description": "GitHub Personal Access Token for runner registration"
      }
    },
    "githubRepositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/sbroenne/RvToolsMerge",
      "metadata": {
        "description": "GitHub repository URL (e.g., https://github.com/sbroenne/RvToolsMerge)"
      }
    },
    "runnerName": {
      "type": "string",
      "defaultValue": "azure-windows-runner",
      "metadata": {
        "description": "Name for the GitHub runner"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2as_v2",
      "metadata": {
        "description": "VM size for the GitHub runner (ARM-based for cost efficiency)"
      }
    },
    "windowsVersion": {
      "type": "string",
      "defaultValue": "win11-23h2-pro",
      "metadata": {
        "description": "Windows 11 Pro version (fixed for consistency and optimal AHUB licensing)"
      }
    },
    "enableAHUB": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Azure Hybrid Use Benefit for Windows Client licensing"
      }
    }
  },
  "variables": {
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]",
      "project": "github-runner",
      "costCenter": "development"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-05-01",
      "name": "[format('vnet-runner-{0}', variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-runner-{0}', variables('resourceToken')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-runner-{0}', variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('nsg-runner-{0}', variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowRDP",
            "properties": {
              "description": "Allow RDP access for administration",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHTTPS",
            "properties": {
              "description": "Allow HTTPS outbound for GitHub API access",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowHTTP",
            "properties": {
              "description": "Allow HTTP outbound for package downloads",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1002,
              "direction": "Outbound"
            }
          },
          {
            "name": "AllowDNS",
            "properties": {
              "description": "Allow DNS resolution",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "53",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1003,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[format('pip-runner-{0}', variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[format('github-runner-{0}', variables('resourceToken'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-05-01",
      "name": "[format('nic-runner-{0}', variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-runner-{0}', variables('resourceToken')))]"
              },
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('vnet-runner-{0}', variables('resourceToken'))), '2024-05-01').subnets[0].id]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-runner-{0}', variables('resourceToken')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-runner-{0}', variables('resourceToken')))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-runner-{0}', variables('resourceToken')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-runner-{0}', variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('id-runner-{0}', variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[format('vm-runner-{0}', variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('azd-service-name', 'github-runner'))]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-runner-{0}', variables('resourceToken'))))]": {}
        }
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "github-runner",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault"
            },
            "timeZone": "UTC"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-11",
            "sku": "[parameters('windowsVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('osdisk-runner-{0}', variables('resourceToken'))]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "diskSizeGB": 128
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-runner-{0}', variables('resourceToken')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        },
        "licenseType": "[if(parameters('enableAHUB'), 'Windows_Client', null())]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-runner-{0}', variables('resourceToken')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('nic-runner-{0}', variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', format('vm-runner-{0}', variables('resourceToken')), 'SetupRunner')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -Command \"New-Item -Path C:\\setup -ItemType Directory -Force; Set-Content -Path C:\\setup\\repo.txt -Value ''{0}''; Set-Content -Path C:\\setup\\name.txt -Value ''{1}''; winget install --id Microsoft.PowerShell --silent --accept-package-agreements --accept-source-agreements; winget install --id Git.Git --silent --accept-package-agreements --accept-source-agreements; winget install --id Microsoft.DotNet.SDK.9 --silent --accept-package-agreements --accept-source-agreements; winget install --id OpenJS.NodeJS.LTS --silent --accept-package-agreements --accept-source-agreements; winget install --id Python.Python.3.12 --silent --accept-package-agreements --accept-source-agreements; Write-Host ''Setup completed. PowerShell 7 and development tools installed. Use install-runner.ps1 script to configure GitHub Actions runner.''\"', parameters('githubRepositoryUrl'), parameters('runnerName'))]"
        },
        "protectedSettings": {
          "commandToExecute": "[format('pwsh.exe -Command \"Set-Content -Path C:\\setup\\token.txt -Value ''{0}''\"', parameters('githubToken'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('vm-runner-{0}', variables('resourceToken')))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "virtualMachineName": {
      "type": "string",
      "value": "[format('vm-runner-{0}', variables('resourceToken'))]"
    },
    "publicIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('pip-runner-{0}', variables('resourceToken'))), '2024-05-01').ipAddress]"
    },
    "dnsName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('pip-runner-{0}', variables('resourceToken'))), '2024-05-01').dnsSettings.fqdn]"
    },
    "managedIdentityId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('id-runner-{0}', variables('resourceToken')))]"
    },
    "virtualNetworkId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-runner-{0}', variables('resourceToken')))]"
    },
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "rdpConnectionString": {
      "type": "string",
      "value": "[format('{0}:3389', reference(resourceId('Microsoft.Network/publicIPAddresses', format('pip-runner-{0}', variables('resourceToken'))), '2024-05-01').dnsSettings.fqdn)]"
    },
    "azureHybridUseBenefit": {
      "type": "string",
      "value": "[if(parameters('enableAHUB'), 'Enabled (up to 40% savings)', 'Disabled')]"
    }
  }
}